<script src="http://cdnjs.cloudflare.com/ajax/libs/mathjs/3.16.4/math.min.js"></script>

<!-- load http://maurizzzio.github.io/function-plot/ -->
<script src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<script src="https://wzrd.in/standalone/function-plot@1.14.0"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.9.0-alpha/katex.min.css" integrity="sha384-FkMHIpkXHDi3o2XSOOa5/9TpXg4AX4DXPSC6z28hi2Eqn/27ea8MTV18rTq9OyQR" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.9.0-alpha/katex.min.js" integrity="sha384-wt0V9VomB0kx/jgLEkR18Slo+aNALuRwOOrWkicjQ0HHpFqu0JKzaFkbtmsku5a/" crossorigin="anonymous"></script>

<div data-eq="{{this.eq}}" class="center" width="100%" id="ans1"></div>
<div data-eq="{{this.eq}}" class="center" width="100%" id="plot"></div>
<style>
.katex { font-size: 3vw; }
</style>

<script>
(function() {
    var throttle = function(type, name, obj) {
        obj = obj || window;
        var running = false;
        var func = function() {
            if (running) { return; }
            running = true;
             requestAnimationFrame(function() {
                obj.dispatchEvent(new CustomEvent(name));
                running = false;
            });
        };
        obj.addEventListener(type, func);
    };

    /* init - you can init any event */
    throttle("resize", "optimizedResize");
})();

  let ans1 = document.getElementById("ans1");
  let ans2 = document.getElementById("ans2");
  let header_cont = document.getElementById("header-cont");
  let eq = plot.getAttribute("data-eq");
  function draw() {
    let size = header_cont.offsetWidth;
    try {
      functionPlot({
         width: size * 0.98,
         height: size * .555,
        target: '#plot',
        data: [{
          fn: eq,
          sampler: 'builtIn',  // this will make function-plot use the evaluator of math.js
          graphType: 'polyline'
        }]
      });
    }
    catch (err) {
      console.log(err);
    }
  }
  katex.default.render(eq + "", ans1, {
   tip: {xLine:false}
  });
  draw();
  window.addEventListener("optimizedResize", function() {
      draw();
  });
</script>
